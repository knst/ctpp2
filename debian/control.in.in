Source: ctpp2
Section: libs
Priority: optional
Build-Depends: @cdbs@
Build-Depends-Indep: doxygen
Maintainer: Vasudev Kamath <kamathvasudev@gmail.com>
Uploaders: Jonas Smedegaard <dr@jones.dk>
Standards-Version: 3.9.4
Homepage: http://ctpp.havoc.ru/en
Vcs-Git: git://anonscm.debian.org/collab-maint/ctpp2.git
Vcs-Browser: http://anonscm.debian.org/gitweb/?p=collab-maint/ctpp2.git

Package: ctpp2-utils
Architecture: any
Depends: ${shlibs:Depends},
 ${misc:Depends}
Description: Tools for ctpp template conversion
 CTPP is a suitable choice for projects where a programmer and an HTML
 designer are different people. The goal of CTPP development was to
 achieve maximum performance with minimal basic functionality that is
 easily expandable. In other words, any conceivable capabilities can
 be added by writing users functions.
 .
 This package provides following tools to deal with ctpp templates:
  * ctpp2c - CTPP template compiler
  * ctpp2i - CTPP template interpreter
  * ctpp2-config - CTPP configuration tool
  * ctpp2json - CTPP JSON file parser
  * ctpp2vm - CTPP virtual machine

Package: ctpp2-doc
Architecture: all
Section: doc
Depends: ${misc:Depends}
Description: HTML template engine for C++ - documentation
 CTPP is a suitable choice for projects where a programmer and an HTML
 designer are different people. The goal of CTPP development was to
 achieve maximum performance with minimal basic functionality that is
 easily expandable. In other words, any conceivable capabilities can be
 added by writing users functions.
 .
 This package contains API manual.

Package: __LIBPKGNAME__
Section: libs
Architecture: any
Depends: ${shlibs:Depends},
 ${misc:Depends}
Pre-Depends: ${misc:Pre-Depends},
 ${cdbs:Pre-Depends}
Suggests: ctpp2-utils
Multi-Arch: same
Description: HTML template engine for C++
 CTPP is a suitable choice for projects where a programmer and an HTML
 designer are different people. The goal of CTPP development was to
 achieve maximum performance with minimal basic functionality that is
 easily expandable. In other words, any conceivable capabilities can be
 added by writing users functions.
 .
 CTPP has following advantages over other template engines:
  * Very High performace as this is written in C++
  * Flexible syntax of templates
  * Robustness
  * Portability
  * Support for implementations in the language your choice
  * Various template sources
  * Output data filters
  * User functions

Package: __LIBPKGNAME__-dbg
Section: debug
Priority: extra
Architecture: any
Depends: ${misc:Depends},
 __LIBPKGNAME__ (= ${binary:Version})
Description: HTML template engine for C++ - debugging symbols
 CTPP is a suitable choice for projects where a programmer and an HTML
 designer are different people. The goal of CTPP development was to
 achieve maximum performance with minimal basic functionality that is
 easily expandable. In other words, any conceivable capabilities can be
 added by writing users functions.
 .
 This package contains the debugging symbols.

Package: libctpp2-dev
Section: libdevel
Architecture: any
Multi-Arch: same
Depends: __LIBPKGNAME__ (= ${binary:Version}),
 ${devlibs:Depends},
 ${misc:Depends}
Suggests: ctpp2-doc
Description: HTML template engine for C++ (development)
 CTPP is a suitable choice for projects where a programmer and an HTML
 designer are different people. The goal of CTPP development was to
 achieve maximum performance with minimal basic functionality that is
 easily expandable. In other words, any conceivable capabilities can be
 added by writing users functions.
 .
 This package provides header files for developing your applications to
 use ctpp2 template engine.
 .
 These header files allows you to utilize the library in your code to
 utilize the ctpp2 template engine.
